
100 days of Python::  http://blog.tecladocode.com/100daysofpython/

#####################################################################################################################################
Python Code Review:: https://dbader.org/blog/live-python-code-review
Flake8 tool for linting( quality checking tool ): https://medium.com/python-pandemonium/what-is-flake8-and-why-we-should-use-it-b89bd78073f2

#######################################################################################################################################
CLI with python : https://dbader.org/blog/python-commandline-tools-with-click
                  https://dbader.org/blog/mastering-click-advanced-python-command-line-apps

########################################################################################################################################
Flask Course Udemy git repo :: https://github.com/schoolofcode-me/rest-api-sections

JWT configuration, advanced:: http://blog.tecladocode.com/learn-python-advanced-configuration-of-flask-jwt/

RESTfull API with flask(V good) ::https://auth0.com/blog/developing-restful-apis-with-python-and-flask/
$$To create a module on a Python application, we just need to create a folder and add an empty file called __init__.py to it.

#########################################################################################################################################

https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04

REST API Integration in Python: https://realpython.com/api-integration-in-python/

ML with Django :  https://www.codementor.io/jadianes/get-started-with-django-building-recommendation-review-app-du107yb1a
                  https://github.com/jadianes/winerama-recommender-tutorial/tree/master/winerama
                  
######################################################################################################################################## VIRTUAL ENVIRONMENT $$$$$$$$$$$$$$$$$$$$$$$$$$$$$               

$$$  To create a virtualenv in windows, run ::   python3.6 -m virtualenv myvenv
      In linux, run ::      virtualenv myvenv                     
$$$ To activate myvenv in Windows, run : myvenv\Scripts\activate
                       In Linux, run   : source myvenv/bin/activate

$$$ Install from requirements.txt :  pip install -r requirements.txt


####################################################################################################################
https://stackoverflow.com/questions/11315010/what-do-and-before-a-variable-name-mean-in-a-function-signature  $$$$$$$$$$$$$$

Inside a function header:

* collects all the positional arguments in a tuple

** collects all the keyword arguments in a dictionary

>>> def functionA(*a, **kw):
       print(a)
       print(kw)


>>> functionA(1, 2, 3, 4, 5, 6, a=2, b=3, c=5)
(1, 2, 3, 4, 5, 6)
{'a': 2, 'c': 5, 'b': 3}
In a function call:

* unpacks an list or tuple into position arguments

** unpacks an dictionary into keyword arguments

>>> lis=[1, 2, 3, 4]
>>> dic={'a': 10, 'b':20}
>>> functionA(*lis, **dic)  #it is similar to functionA(1, 2, 3, 4, a=10, b=20)
(1, 2, 3, 4)
{'a': 10, 'b': 20}
#############################################################################################################################
